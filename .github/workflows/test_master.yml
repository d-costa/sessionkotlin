name: Test Master

# Controls when the workflow will run
on:
  push:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Tests
        run: cd sessionkotlin && gradle wrapper && ./gradlew clean build

      - name: Checkout badges branch dedicated to storing badges only
        uses: actions/checkout@v3
        with:
          ref: badges
          path: badges


      - name: Generate report
        run: cd sessionkotlin && gradle wrapper && ./gradlew clean codeCoverageReport

      - name: Generate Jacoco Badge
        id: jacoco
        uses: cicirello/jacoco-badge-generator@v2
        with:
          badges-directory: badges
          generate-branches-badge: true
          jacoco-csv-file: sessionkotlin/build/reports/jacoco/codeCoverageReport/codeCoverageReport.csv

      - name: Log coverage percentage
        run: |
          echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
          echo "branches = ${{ steps.jacoco.outputs.branches }}"

      - name: Commit and push
        if: ${{ github.event_name != 'pull_request' }}
        run: |
          cd badges
          if [[ `git status --porcelain *.svg` ]]; then
            git config --global user.name 'github-actions'
            git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'
            git add *.svg
            git commit -m "Autogenerated JaCoCo coverage badge" *.svg
            git push
          fi

      - name: Upload Jacoco coverage report
        uses: actions/upload-artifact@v2
        with:
          name: jacoco-report
          path: sessionkotlin/build/reports/jacoco/codeCoverageReport

      - name: Prepare Build docs
        uses: actions/checkout@v2
        with:
          persist-credentials: false
      - name: Set up JDK
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - name: Build docs
        run: cd sessionkotlin && gradle wrapper && ./gradlew test dokkaHtmlMultiModule

#      - name: Publish docs to Github Pages
#        uses: JamesIves/github-pages-deploy-action@releases/v3
#        with:
#          ACCESS_TOKEN: ${{ secrets.DOCS_ACCESS_TOKEN }}
#          BRANCH: gh-pages
#          FOLDER: sessionkotlin/build/dokka/htmlMultiModule
#          TARGET_FOLDER: dokkadocs
